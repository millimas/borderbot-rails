<!-- Load d3.js and c3.js -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.min.js" charset="utf-8"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/c3/0.4.10/c3.min.js"></script>

<%- provide(:title, "『BELIEVE MY DRE@M!!』のランナー分布") %>

<ol class="breadcrumb">
  <li><%= link_to 'Home', root_path %></li>
  <li class="active">BMD runners</li>
</ol>


<div class="panel panel-default">
  <div class="panel-heading">
    <h3 class="panel-title">
      『BELIEVE MY DRE@M!!』のプレイヤー分布
    </h3>
  </div>
  <ul class="list-group">
    <li class="list-group-item">
      <%= @updated_at.strf_mlevent %>頃時点
      <%= link_to bmd_runner_path(format: :csv) do %>
        <span class='fa fa-download'></span> CSVをダウンロード
      <%- end %>
      (<%= link_to 'Shift-JIS版', bmd_runner_path(format: :csv, encoding: 'sjis') %>)
    </li>
  </ul>
  <div class="panel-body">
    <div id='chart'></div>
  </div>
</div>

<script type='text/javascript'>
  $(document).on('ready',
    function() {
      var chart = c3.generate({
        bindto: '#chart',
        size: {
          height: 550
        },
        point: {
          r: 0.5
        },
        data: {
          url: "/misc/bmd_runner.csv?summarized=true<%= params[:detail].nil? ? '' : '&detail=true'.html_safe %>",
          x: 'rank',
          colors: <%= raw @idol_colors.to_json %>,
        },
        axis: {
          x: {
            label: 'rank',
            padding: { left: 0, right: 0 },
            tick: {
              format: function (rank) { return rank + '位'; }
            },
            min: <%= params[:detail].nil? ? 1 : 200 %>
          },
          y: {
            label: 'point',
            padding: { top: 0, bottom: 0 },
            tick: {
              format: function(value) {
                if (value == 0) return 0;
                var s = ['', '万', '億'];
                var e = Math.floor(Math.log(value) / Math.log(10000));
                return parseFloat((value / Math.pow(10000, e)).toFixed(1)) + s[e];
              }
            },
            min: 0
          }
        },
        zoom: {
          enabled: true,
          rescale: true
        },
        tooltip: {
          contents: function (dd, defaultTitleFormat, defaultValueFormat, color) {
            var $$ = this, config = $$.config,
                titleFormat = config.tooltip_format_title || defaultTitleFormat,
                nameFormat = config.tooltip_format_name || function (name) { return name; },
                valueFormat = config.tooltip_format_value || defaultValueFormat,
                text, i, title, value, name, bgcolor;

            var d = dd.sort(function (a, b) { return b.value - a.value; });

            for (i = 0; i < d.length; i++) {
              if (! (d[i] && (d[i].value || d[i].value === 0))) { continue; }

              if (! text) {
                title = titleFormat ? titleFormat(d[i].x) : d[i].x;
                text = "<table class='" + $$.CLASS.tooltip + "'>" + (title || title === 0 ? "<tr><th colspan='6'>" + title + "</th></tr>" : "");
              }

              name = i + 1 + '. ' + nameFormat(d[i].name);
              value = valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index);
              bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);

              if (i % 3 == 0) text += "<tr class='" + $$.CLASS.tooltipName + "-" + d[i].id + "'>";
              text += "<td class='name'><span style='background-color:" + bgcolor + "'></span>" + name + "</td>";
              text += "<td class='value'>" + value + "</td>";
              if (i % 3 == 2) text += "</tr>";
            }
            if (d.length % 3 != 0) text += "<td class='name'></td><td class='value'></td><td class='name'></td><td class='value'></td></tr>";
            return text + "</table>";
          }
        }
      });
    }
  );
</script>
