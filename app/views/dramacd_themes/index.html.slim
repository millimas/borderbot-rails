- provide(:title, t('glossary.cast_vote_campaign'))
ol.breadcrumb
  li = link_to t('controllers.root'), root_path
  li.active = t('glossary.cast_vote_campaign')
.panel.panel-default
  .panel-heading
    h3.panel-title
      = t('.vote_status_on', time: @latest_updated.strf_mlevent)
      | &nbsp;
      small = t('.vote_status_notice')
  .panel-body
    .tabbable
      .tab-content
        .tabbable
          ul.nav.nav-tabs.nav-justified
            - @themes.each_with_index do |theme|
              li class="#{'active' if theme.id == 1}"
                a href="##{theme.id}" data-toggle='tab'
                  = theme.title
          .tab-content
            - @themes.each_with_index do |theme|
              .tab-pane class="#{'active' if theme.id == 1}" id="#{theme.id}" style='padding-top: 30px;'
                - theme.idol_roles.each_with_index do |idol_role, i|
                  - vote_hash = @latest_vote[theme.id][i + 1]
                  - previous_vote_hash = @previous_vote[theme.id][i + 1]
                  - sorted_array = vote_hash.sort_by { |idol_id, vote_cnt| vote_cnt }.reverse
                  .col-lg-4.col-md-4.col-sm-6
                    .panel.panel-default
                      .panel-heading
                        h3.panel-title[style="font-size: .9em;"]
                          = idol_role
                      .list-group
                        - sorted_array[0..4].each_with_index do |val, j|
                          .list-group-item
                            - idol = Rubimas.find(val.first.to_i)
                            - if j.zero?
                              span style="color: #{idol.color}"
                                span.fa.fa-star aria-hidden="true"
                            - previous_vote_count = previous_vote_hash[val.first.to_i]
                            - latest_vote_count = val.last
                            = t('.vote_for_idol_line', idol: idol.name, count: number_with_delimiter(val.last))
                            - if previous_vote_count.try(:<, latest_vote_count)
                              = t('.vote_diff', diff: val.last - previous_vote_hash[val.first.to_i])
