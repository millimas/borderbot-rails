<script type='text/javascript'>
(function(context) {
  var getCategory = function(category, dataItem, categoryAxis) {
    var period = new Date(category * 1000);
    var reward = dataItem.reward_rank;

    var options = {
      day: "numeric", hour: "2-digit", minute: "2-digit"
    };

    if (reward === undefined) {
      return period.toLocaleTimeString("ja-JP", options);
    } else {
      return period.toLocaleTimeString("ja-JP", options) + '(' + (reward || 1) + '枠)';
    }
  };
  var createAmCharts = function (chart_elm_id, legend_elm_id, display_until, title_map, data) {
    var chart = AmCharts.makeChart(chart_elm_id, {
      "type": "serial",
      "theme": "light",
      "pathToImages": "http://www.amcharts.com/lib/3/images/",
      "legend": {
        "divId": legend_elm_id,
        "useGraphSettings": true,
        "labelText": "[[title]]",
        "valueText": "",
        "valueAlign": "left"
      },
      "valueAxes": [{
        "id":"v1",
        "axisThickness": 2,
        "gridAlpha": 0,
        "axisAlpha": 1,
        "labelFunction": function(value, valueText, valueAxis) {
          if (value == 0) return 0;
          var s = ['', '万', '億'];
          var e = Math.floor(Math.log(value) / Math.log(10000));
          return parseFloat((value / Math.pow(10000, e)).toFixed(1)) + s[e];
        },
        "position": "left"
      }],
      "chartScrollbar": {},
      "chartCursor": {
        "cursorPosition": "mouse"
      },
      "categoryField": "time",
      "categoryAxis": {
        "categoryFunction" : getCategory,
        "axisColor": "#DADADA",
        "minorGridEnabled": true,
        "labelRotation": 45
      },
      "responsive": {
        "enabled": true,
        "addDefaultRules": false,
        "rules": [{
          "minWidth": 200,
          "maxWidth": 800,
          "maxHeight": 800,
          "minHeight": 200,
          "overrides": {
            "legend": {
              "valueAlign": "right",
              "enabled": true
            }
          }
        }]
      }
    });
    var zoom_start = 0;
    var zoom_end = 1;
    chart.addListener("dataUpdated", function() {
      chart.zoomToIndexes(zoom_start, zoom_end);
    });
    chart.addListener("zoomed", function(e) {
      zoom_start = e.startIndex;
      zoom_end = e.endIndex;
    });

    if (data) updateAmCharts(chart, display_until, title_map, data);
    return chart;
  };

  var updateAmCharts = function(chart, display_until, title_map, data) {
    var graph_columns = jQuery.map(data[0], function(k, v) { return v; });
    var border_columns = jQuery.grep(graph_columns, function(c) { if (c.indexOf('border_') > -1) return true; });
    var graphs = jQuery.map(border_columns, function(border_column) {
      var idx = border_column.match(/\d+/)[0];
      if (title_map) {
        var title = title_map[idx];
      } else {
        var title = idx + "位";
      }
      return {
        'valueAxis': 'v1',
        'bullet': 'round',
        'bulletBorderThickness': 1,
        'hideBulletsCount': 30,
        'title': title,
        'valueField': border_column,
        'balloonText': "[[title]]:[[value]]pt",
        'fillAlphas':  0,
        'hidden': (idx < display_until)
      };
    });

    chart.dataProvider = data;
    chart.graphs = graphs;
    chart.zoomToIndexes(0, chart.dataProvider.length - 1);
    chart.validateData();
  };

  context.createAmCharts = createAmCharts;
})(window);
</script>
